(dp1
S'output'
p2
S'<class \'_mysql_exceptions.OperationalError\'> (1054, "Unknown column \'t\' in \'where clause\'")'
p3
sS'layer'
p4
S'/home/fernado/web2py/tronco/applications/ura/controllers/initial.py'
p5
sS'code'
p6
S'# coding=UTF-8\nimport commands, os\n\ndef audio():\n\tresponse.title = \'Audios\'\n\tdb.audios.id.readable=False\n\n\tgrid = SQLFORM.grid(db.audios, csv=False,\n\t\t\t\t\tdetails=False, searchable=True, editable=True, \n\t\t\t\t\tcreate=False,  user_signature=False)\n\t\n\treturn response.render("initial/show_grid_audio.html", grid=grid)\n\n\ndef add_audio():\n\tresponse.title = \'Audios\'\n\tform = SQLFORM(db.audios, submit_button=\'Enviar\', deletable=True, \n\t\tfields=[\'nome\', \'audio\'])\n\t\n\tif form.process().accepted:\n\t\taudio = form.vars.audio\n\t\t#print request.vars.nome\n\t\taudio_nome=audio.replace(\'.wav\', \'\') #tirando extens\xc3\xa3o do nome\n\n\t\tsaida = os.system("sox /aldeia/etc/asterisk/audio/cliente/%s -t" \n\t\t\t"raw -r 8000 /aldeia/etc/asterisk/audio/cliente/%s.sln" % (audio, audio_nome)) #convertendo audio\n\t\tif saida is 0: #testa convers\xc3\xa3o do audio\n\t\t\tprint \'ok\'\n\t\t\tsession.flash = \'audio recebido com sucesso\'\n\t\t\tredirect(URL("initial", "/audio"))\n\t\telse:\n\t\t\tresponse.flash = \'Erro de convers\xc3\xa3o, contate o desenvolvedor\'\t\n\telif form.errors:\n\t\tresponse.flash = \'erro, algo n\xc3\xa3o deu certo\'\n\t\n\treturn response.render("initial/show_form_audio.html", form=form)\n\n\ndef uras():\n\tresponse.title = \'Atendimentos\'\n\tdb.uras.id.readable=False\n\n\tlinks = [ lambda row: A(\'+\', _class=\'btn\', \n\t\t\t\t_title=\'Adicionar a\xc3\xa7\xc3\xa3o\', \n\t\t\t\t_href=URL("initial", "/add_ura_acoes", \n\t\t\t\tvars=dict(id=row.id))),\n\t\t\t  lambda row: A(\'A\xc3\xa7\xc3\xb5es\', _class=\'btn\', \n\t\t\t\t_title=\'Ver a\xc3\xa7\xc3\xb5es\', \n\t\t\t\t_href=URL("initial", "/ura_acoes", \n\t\t\t\tvars=dict(id=row.id))) ]\n\n\tgrid = SQLFORM.grid(db.uras, csv=False,\n\t\t\t\t\tdetails=False, searchable=True, editable=True, \n\t\t\t\t\tcreate=False,  user_signature=False, links=links)\n\t\n\treturn response.render("initial/show_grid_uras.html", grid=grid)\n\ndef add_uras():\n\tresponse.title = \'Atendimentos\'\n\tform = SQLFORM(db.uras, submit_button=\'Criar\', deletable=True)\n\t\n\tif form.process().accepted:\n\t\t#print form.vars.audio\n\t\t#print request.vars.nome\n\t\tsession.flash = \'ura criada com sucesso\'\n\t\tredirect(URL("initial", "/uras"))\n\telif form.errors:\n\t\tresponse.flash = \'erro, algo n\xc3\xa3o deu certo\'\n\t\n\treturn response.render("initial/show_form_uras.html", form=form)\n\ndef acoes():\n\tresponse.title = \'A\xc3\xa7\xc3\xb5es\'\n\tdb.acoes.id.readable=False\n\n\tgrid = SQLFORM.grid(db.acoes, csv=False, maxtextlength=103,\n\t\t\t\t\tdetails=False, searchable=True, editable=False,  \n\t\t\t\t\tcreate=False,  user_signature=False, deletable=False)\n\t\n\treturn response.render("initial/show_grid.html", grid=grid)\n\ndef add_acoes():\n\tresponse.title = \'Padr\xc3\xa3o\'\n\tform = SQLFORM(db.acoes, deletable=True)\n\t\n\tif form.process().accepted:\n\t\t#print form.vars.audio\n\t\t#print request.vars.nome\n\t\tsession.flash = \'audio recebido com sucesso\'\n\t\tredirect(URL("initial", "/acoes"))\n\telif form.errors:\n\t\tresponse.flash = \'erro, algo n\xc3\xa3o deu certo\'\n\t\n\treturn response.render("initial/show_form.html", form=form)\n\ndef ura_acoes():\n\tresponse.title = \'Detalhada\'\n\tid_ura = request.vars.id\n\tdb.ura_acoes.id.readable=False\n\n\tquery = (db.ura_acoes.id_ura == id_ura)\n\n\tgrid = SQLFORM.grid(query, csv=False,\n\t\t\t\t\tdetails=False, searchable=True, editable=True, \n\t\t\t\t\tcreate=False,  user_signature=False)\n\t\n\treturn response.render("initial/show_grid_uraacoes.html", grid=grid)\n\ndef add_ura_acoes():\n\t#nao estou usando sqlform -- formulario puro\n\turas = db.executesql("SELECT nome FROM uras")\n\tlista_uras=[]\n\tfor ura in uras:\n\t\tlista_uras.append(ura[0])\n\n\tform = SQLFORM.factory(\n\t\tField(\'teste\', requires=IS_IN_DB(db, \'acoes.id\', \'%(nome)s\')),\n\t\tField(\'dep1\', requires=IS_IN_SET(lista_uras)),\n\t\tField(\'dep2\', requires=IS_IN_DB(db, \'uras.id\', \'%(nome)s\'))\n\t\t)\n\tif form.process().accepted:\n\t\tprint form.teste\n\t\tprint form.dep1\n\t\tprint form.dep2\n\t\n\treturn response.render("initial/show_form_ext.html", form=form)\n\ndef ajax_uras():\n\t#print request.vars[\'teste\']\n\turas = db.executesql("SELECT id, nome FROM uras")\n\tprint uras\n\tdrop2=[dict([x]) for x in uras]\n\n\treturn response.json(uras)\n\ndef ajax_ramais():\n\tramais = db.executesql("SELECT ramal_virtual FROM ramal_virtual")\n\n\treturn response.json(ramais)\n\ndef ajax_acoes():\n\tacoes = db.executesql("SELECT id, nome FROM acoes")\n\n\treturn response.json(acoes)\n\ndef ajax_audios():\n\taudios = db.executesql("SELECT id, nome FROM audios")\n\n\treturn response.json(audios)\n\n\ndef form_ura_acoes():\n\t#processa o form ura_acoes e insere no banco\n\tura = request.vars[\'ura\']\n\tdtmf = request.vars[\'dtmf\']\n\tacao = request.vars[\'acao\']\n\topc = request.vars[\'opc\']\n\tprint ura\n\n\tdb.executesql("INSERT INTO ura_acoes (id_ura, dtmf, id_acao, variavel) values (\'%s\', \'%s\', \'%s\', \'%s\')" % (ura, dtmf, acao, opc))\n\tredirect(URL("initial", "/ura_acoes?id=%s" % (ura)))\n\ndef sobre():\n\tresponse.title = \'Sobre\'\n\treturn response.render("initial/principal.html")\n\ndef principal():\n\tredirect(URL("initial", "/audio"))\n\ndef valida_form():\n\t#confere campo dtmf do form ura_acoes\n\tid_ura = str(request.vars[\'id\'])\n\tid_ura_ok = "\'"+id_ura+"\'"\n\tprint id_ura_ok\n\tdtmf = request.vars[\'dtmf\']\n\tvar = db.executesql("SELECT count(*) FROM ura_acoes WHERE id_ura = %s and dtmf = %s" % (id_ura_ok, dtmf))\n\tvar2 = var[0][0]\n\tif var2  == 0:\n\t\ta = True\n\tif var2 == 1:\n\t\ta = False\n\n\treturn response.json(a)\n\n\n\ndef user():\n\tprint a\n\ndef register():\n\treturn auth.register()\n\ndef login():\n        return auth.login()\n\ndef account():\n    return dict(register=auth.register(),\n                login=auth.login())\n\t\ndef download():\n\treturn response.download(request, db)\n\n\n\n\t\n\n\n\n\nresponse._vars=response._caller(valida_form)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/fernado/web2py/tronco/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/fernado/web2py/tronco/applications/ura/controllers/initial.py", line 210, in <module>\n  File "/home/fernado/web2py/tronco/gluon/globals.py", line 194, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/fernado/web2py/tronco/applications/ura/controllers/initial.py", line 176, in valida_form\n    var = db.executesql("SELECT count(*) FROM ura_acoes WHERE id_ura = %s and dtmf = %s" % (id_ura_ok, dtmf))\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 8001, in executesql\n    adapter.execute(query)\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 1784, in execute\n    return self.log_execute(*a, **b)\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 1778, in log_execute\n    ret = self.cursor.execute(command, *a[1:], **b)\n  File "/usr/lib/python2.7/dist-packages/MySQLdb/cursors.py", line 174, in execute\n    self.errorhandler(self, exc, value)\n  File "/usr/lib/python2.7/dist-packages/MySQLdb/connections.py", line 36, in defaulterrorhandler\n    raise errorclass, errorvalue\nOperationalError: (1054, "Unknown column \'t\' in \'where clause\'")\n'
p11
s.